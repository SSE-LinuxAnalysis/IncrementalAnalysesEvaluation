######################################
#    General Pipeline Parameters     #
######################################

resource_dir = res/
output_dir = output/incremental/
plugins_dir = plugins/incremental/
cache_dir = cache/
archive = false
archive.dir = archive/incremental
### Logging ###
log.dir = log/incremental/
log.console = false
log.file = true
log.level = DEBUG


##############################
#     Analysis Parameters    #
##############################

analysis.class = net.ssehub.kernel_haven.incremental.analysis.IncrementalThreadedDeadCodeAnalysis

incremental.hybrid_cache.dir = hybrid_cache/
incremental.input.source_tree_diff = DIFF_FILE_GENERATED_VALUE
preparation.class.0 = net.ssehub.kernel_haven.incremental.preparation.IncrementalPreparation

analysis.undead.threads = 24
cnf.solver = SAT4J


# ComAnAnalyzer flags all changes to block conditions as variability change. It therefore flags a superset of actual variability changes.
incremental.variability_change_analyzer.execute = true
incremental.variability_change_analyzer.class = net.ssehub.kernel_haven.incremental.diff.analyzer.ComAnAnalyzer

# The variability change filter passes every item to the extractor that was flagged as a variability change. The analysis relies on
# the extracted elements to determine the analysis targets.
incremental.code.filter = net.ssehub.kernel_haven.incremental.preparation.filter.VariabilityChangeFilter
incremental.build.filter = net.ssehub.kernel_haven.incremental.preparation.filter.VariabilityChangeFilter
incremental.variability.filter = net.ssehub.kernel_haven.incremental.preparation.filter.VariabilityChangeFilter

# In this configurations we do not perform any further optimizations. Everything that was flagged as a variability change before
# is considered a change to variability in the analysis as well.
analysis.consider_vm_vars_only = false
incremental.analysis.code_model.optimization = false
incremental.analysis.build_model.optimization = false

# The line information within the model is updated when the location of a block changes. This does not require renewed extraction
# of the corresponding file. Instead we use the information from the diff file to determine how many lines were inserted or deleted
# before the line in which a block starts or ends.
incremental.lines.update_lines = true

#####################################
#    Common Extractor Parameters    #
#####################################

source_tree = source-code/linux/
arch = x86


################################
#     Code Model Parameters    #
################################

code.provider.timeout = 0
code.provider.cache.write = false
code.provider.cache.read = false
code.extractor.class = net.ssehub.kernel_haven.block_extractor.CodeBlockExtractor

code.extractor.file_regex = .*(\\.c|\\.h|\\.S)
code.extractor.fuzzy_parsing = true


################################
#    Build Model Parameters    #
################################

build.provider.timeout = 0
build.provider.cache.write = false
build.provider.cache.read = false
build.extractor.class = net.ssehub.kernel_haven.kbuildminer.KbuildMinerExtractor

#######################################
#     Variability Model Parameters    #
#######################################

variability.provider.timeout = 0
variability.provider.cache.write = false
variability.provider.cache.read = false
variability.extractor.class = net.ssehub.kernel_haven.kconfigreader.KconfigReaderExtractor
